<!DOCTYPE html>
<head>
	<meta charset='utf-8' />
	<title>继承_原型式继承</title>
</head>
<body>
	<p>
		寄生式（parasitic）继承是与原型式继承紧密相关的一种思路，并且同样也是由克罗克福德推而广之的。寄生式继承的思路与寄生构造函数和工厂模式类似，即创建一个仅用于封装继承过程的函数，改函数在内部以某种方式来增强对象，最后再像真的是它做了所有工作一样返回对象。
	</p>
	<p>
		在主要考虑对象而不是自定义类型和构造函数的情况下，寄生式继承也是一种有用的模式。
		使用寄生式继承来为对象添加函数，会由于不能做到函数复用而降低效率。
	</p>
	<script>
	function createAnother(original){
		var clone=Object.create(original);
		clone.sayHi=function(){
			console.log('Hi.');
		}
		return clone;
	}

	var person={
		name:'Jermey',
		friends:['Adam','Bob','Cate']
	}
	var anotherPerson=createAnother(person);
	anotherPerson.sayHi(); // Hi.
	</script>
</body>